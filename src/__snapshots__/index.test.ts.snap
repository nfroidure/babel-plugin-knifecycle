// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-knifecycle autoHandler should work with a function inside a var 1`] = `
"import noop from 'noop';
import { handler as _handler } from 'knifecycle';
const getUser = async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
};
export default _handler(getUser, "getUser", ["mysql", "?log"]);"
`;

exports[`babel-plugin-knifecycle autoHandler should work with an anonymous function inside a var 1`] = `
"import noop from 'noop';
import { handler as _handler } from 'knifecycle';
const getUser = async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
};
export default _handler(getUser, "getUser", ["mysql", "?log"]);"
`;

exports[`babel-plugin-knifecycle autoHandler should work with es6 modules imports 1`] = `
"import noop from 'noop';
import { handler as _handler } from 'knifecycle';
export default _handler(getUser, "getUser", ["mysql", "?log"]);
async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoHandler should work with inline function expressions 1`] = `
"import noop from 'noop';
import { handler as _handler } from 'knifecycle';
export default _handler(async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}, "getUser", ["mysql", "?log"]);"
`;

exports[`babel-plugin-knifecycle autoInject should work with es6 modules imports 1`] = `
"import noop from 'noop';
import { inject as _inject } from 'knifecycle';
export default _inject(["mysql", "?log"], getUser);
async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoInject should work with no injection 1`] = `
"import noop from 'noop';
import { inject as _inject } from 'knifecycle';
export default _inject([], getUser);
async function getUser() {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoInject should work with non-destructured "_" named args 1`] = `
"import noop from 'noop';
import { inject as _inject, name as _name } from 'knifecycle';
export default _inject([], _name("getUser", getUser));
async function getUser(_, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoInject should work with several auto functions 1`] = `
"import noop from 'noop';
import { inject as _inject, name as _name } from 'knifecycle';
export default _inject(["mysql", "?log"], _name("getUser", getUser));
async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoName should work with es6 modules imports 1`] = `
"import noop from 'noop';
import { name as _name } from 'knifecycle';
export default _name("getUser", getUser);
async function getUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoName should work with init prefix 1`] = `
"import noop from 'noop';
import { name as _name } from 'knifecycle';
export default _name("getUser", initGetUser);
async function initGetUser({
  mysql: db,
  log = noop
}, {
  userId
}) {
  return {};
}"
`;

exports[`babel-plugin-knifecycle autoProvider should work with es6 modules imports 1`] = `
"import noop from 'noop';
import { provider as _provider } from 'knifecycle';
export default _provider(getUser, "getUser", ["mysql", "?log"]);
async function getUser({
  mysql: db,
  log = noop
}) {
  return async ({
    userId
  }) => {
    return {};
  };
}"
`;

exports[`babel-plugin-knifecycle autoProvider should work with options 1`] = `
"import noop from 'noop';
import { provider as _provider } from 'knifecycle';
export default _provider(getUser, "getUser", ["mysql", "?log"], {
  singleton: true
});
async function getUser({
  mysql: db,
  log = noop
}) {
  return async ({
    userId
  }) => {
    return {};
  };
}"
`;

exports[`babel-plugin-knifecycle autoService should work with es6 modules imports 1`] = `
"import noop from 'noop';
import { service as _service } from 'knifecycle';
export default _service(getUser, "getUser", ["mysql", "?log"]);
async function getUser({
  mysql: db,
  log = noop
}) {
  return async ({
    userId
  }) => {
    return {};
  };
}"
`;

exports[`babel-plugin-knifecycle autoService should work with no dependencies 1`] = `
"import noop from 'noop';
import { service as _service } from 'knifecycle';
export default _service(getUser, "getUser", []);
async function getUser() {
  return async ({
    userId
  }) => {
    return {};
  };
}"
`;
